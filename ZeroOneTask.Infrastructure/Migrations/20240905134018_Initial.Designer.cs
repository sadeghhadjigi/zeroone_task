// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZeroOneTask.Infrastructure.Persistence;

#nullable disable

namespace ZeroOneTask.Infrastructure.Migrations
{
    [DbContext(typeof(ZeroOneTaskDbContext))]
    [Migration("20240905134018_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ZeroOneTask.Domain.Entities.Flight", b =>
                {
                    b.Property<long>("FlightId")
                        .HasColumnType("bigint")
                        .HasColumnName("flight_id");

                    b.Property<int>("AirlineId")
                        .HasColumnType("int")
                        .HasColumnName("airline_id");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("arrival_time");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("departure_time");

                    b.Property<long>("RouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("route_id");

                    b.HasKey("FlightId");

                    b.HasIndex("RouteId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("ZeroOneTask.Domain.Entities.Route", b =>
                {
                    b.Property<long>("RouteId")
                        .HasColumnType("bigint")
                        .HasColumnName("route_id");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("departure_date");

                    b.Property<long>("DestinationCityId")
                        .HasColumnType("bigint")
                        .HasColumnName("destination_city_id");

                    b.Property<long>("OriginCityId")
                        .HasColumnType("bigint")
                        .HasColumnName("origin_city_id");

                    b.HasKey("RouteId");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("ZeroOneTask.Domain.Entities.Subscription", b =>
                {
                    b.Property<int>("AgencyId")
                        .HasColumnType("int");

                    b.Property<long>("OriginCityId")
                        .HasColumnType("bigint");

                    b.Property<long>("DestinationCityId")
                        .HasColumnType("bigint");

                    b.HasKey("AgencyId", "OriginCityId", "DestinationCityId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("ZeroOneTask.Domain.Entities.Flight", b =>
                {
                    b.HasOne("ZeroOneTask.Domain.Entities.Route", "Route")
                        .WithMany("Flights")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Route");
                });

            modelBuilder.Entity("ZeroOneTask.Domain.Entities.Route", b =>
                {
                    b.Navigation("Flights");
                });
#pragma warning restore 612, 618
        }
    }
}
